package salesmachine.oim.suppliers;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Set;

import org.hibernate.Session;

import salesmachine.hibernatedb.OimChannelSupplierMap;
import salesmachine.hibernatedb.OimFields;
import salesmachine.hibernatedb.OimFileFieldMap;
import salesmachine.hibernatedb.OimOrderDetails;
import salesmachine.hibernatedb.OimOrders;
import salesmachine.hibernatedb.OimSuppliers;
import salesmachine.hibernatedb.OimVendorSuppliers;
import salesmachine.hibernatedb.Vendors;

public class StandardFileSpecificsProvider implements IFileSpecificsProvider {
	OimVendorSuppliers m_ovs;
	HashMap m_supplierMaps = new HashMap();
	HashMap shipMap = new HashMap();
	
	public StandardFileSpecificsProvider(Session dbSession, OimVendorSuppliers ovs) {
		if (ovs != null)
			shipMap = Supplier.loadSupplierShippingMap(dbSession, ovs.getOimSuppliers(), ovs.getVendors());
	}
	
	public StandardFileSpecificsProvider(Session dbSession, OimVendorSuppliers ovs, Vendors v) {
		m_ovs = ovs;
		if (v != null && ovs != null)
			shipMap = Supplier.loadSupplierShippingMap(dbSession, ovs.getOimSuppliers(), v);
	}
	
	@Override
	public String getFieldValueFromOrder(OimOrderDetails detail,
			OimFileFieldMap fieldMap) {
		OimFields field = fieldMap.getOimFields();
		OimOrders order = detail.getOimOrders();
				
		switch(field.getFieldId().intValue()) {
		case 10000:
			if (m_ovs != null)
				return m_ovs.getAccountNumber();
			break;
		case 0://IGNORE
			break;
		case 1://SKU
			String sku = detail.getSku();
			if (detail.getOimSuppliers() != null) {
				// Drop the prefix
				Integer channelId = order.getOimOrderBatches().getOimChannels().getChannelId();
				Set supplierMap = (Set)m_supplierMaps.get(channelId);
				if (supplierMap == null) {			
					supplierMap = order.getOimOrderBatches().getOimChannels().getOimChannelSupplierMaps();
					m_supplierMaps.put(channelId, supplierMap);
				}
	
				if (supplierMap != null) {
					Iterator itr = supplierMap.iterator();
					while (itr.hasNext()) {
						OimChannelSupplierMap map = (OimChannelSupplierMap)itr.next();
						if (map.getDeleteTm() != null)
							continue;
						
						String prefix = map.getSupplierPrefix();
						OimSuppliers supplier = map.getOimSuppliers();
						System.out.println("Prefix: "+prefix+" -- "+supplier.getSupplierName());

						if (detail.getOimSuppliers().getSupplierId().equals(supplier.getSupplierId())) {
							if (sku.toLowerCase().startsWith(prefix.toLowerCase())) {
								sku = sku.substring(prefix.length());
							}
							break;
						}
					}				
				}
				
			}
			return sku;
		case 2://ProductOrderNumber
			return order.getStoreOrderId();
		case 3://CustomerName
			return order.getDeliveryName();
		case 4://StreetAddress
			return order.getDeliveryStreetAddress();
		case 5://CustomerCity
			return order.getDeliveryCity();
		case 6://CustomerState
			return order.getDeliveryState();
		case 7://CustomerZip
			return order.getDeliveryZip();
		case 8://CustomerCountry
			return order.getDeliveryCountry();
		case 9://Quantity
			return detail.getQuantity().toString();
		case 10://ShipMethod
			String code = Supplier.findShippingCodeFromUserMapping(shipMap, order.getShippingDetails());
			if (code != null && code.length() > 0)
				return code;
			//return m_ovs.getDefShippingMethodCode();			
			return order.getShippingDetails();
		case 11://CustomerCompany
			return order.getDeliveryCompany();
		case 12://CustomerSuburb
			return order.getDeliverySuburb();
		case 13://SupplierSalesOrderNumber
		case 14://SupplierOrderAcceptTime
		case 15://SupplierPurchaseOrderNumber
		case 16://SupplierOrderQuantity
		case 17://SupplierShippedQuantity
		case 18://SupplierShipDate
		case 19://SupplierExpectedReceiptDate
		case 20://SupplierTrackingNumber
		case 21://SupplierHeaderType
		case 22://SupplierHeaderStatus
		case 23://SupplierDetailStatus	
			break;
		case 30:
			return order.getDeliveryPhone();			
		case 31:
			return order.getDeliveryEmail();
		case 34:
			SimpleDateFormat sdf = new SimpleDateFormat("MM-dd-yyyy");
			return sdf.format(new Date());			
		}
		return "";
	}

	@Override
	public String getLastFileLine() {
		// TODO Auto-generated method stub
		return null;
	}

}
